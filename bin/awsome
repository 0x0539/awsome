#!/usr/bin/env ruby

require 'awsome'
require 'optparse'
require 'terminal-table'

requirements_file = 'requirements.yml'
OptionParser.new do |opts|
  opts.banner = 'Usage: awsome [options]' 
  opts.on('-r', '--requirements [FILE]', 'Use a requirements file from another location (default is ./requirements.yml)') do |opt|
    requirements_file = opt
  end
  opts.on('-v', '--verbose', 'Print commands as they are executed') do |opt|
    Awsome.config.verbose = true
  end
  opts.on('-d', '--debug', 'Run ec2 commands with --debug') do |opt|
    Awsome.config.debug = true
  end
  opts.on('-s', '--stacks', 'Print out full stack traces when commands are executed') do |opt|
    Awsome.config.stacks = true
  end
end.parse!

def perform_task(task, &block)
  puts Terminal::Table.new { |t| t << ["[#{task}] Started"] }
  retval = yield task
  #puts Terminal::Table.new { |t| t << ["[#{task}] Complete"] }
  #retval
end

requirements = nil
instances = nil
matches = nil

perform_task "Gathering Instance Requirements" do
  requirements = Awsome::Requirements.from_yaml_file(requirements_file)
  puts Awsome::Requirements.to_table(requirements.instances, 'Required Instances')
end

perform_task "Analyzing Running Instances" do
  filters = {'instance-state-name' => 'running'}.merge(requirements.filters)
  instances = Awsome::Ec2.describe_instances(filters)
  puts Awsome::Ec2::Instance.to_table(instances, 'Running Instances')
end

perform_task "Matching Requirements to Instances" do
  matches = Awsome::Matchmaker.new(instances, requirements).matches
  puts Awsome::Matchmaker.to_table(matches, 'Requirement/Instance Match Plan')
end

perform_task "Executing Plan" do
  Awsome::Executor.new(matches).execute
end
